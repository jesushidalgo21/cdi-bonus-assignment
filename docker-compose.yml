version: '3.8'

services:
  pyspark:
    build: .
    container_name: pyspark-container
    volumes:
      - ./data:/data
      - .:/app
    ports:
      - "4040:4040"
    environment:
      - SPARK_HOME=/opt/spark
      - PYTHONPATH=/app:/opt/spark/python:/opt/spark/python/lib/py4j-0.10.9.7-src.zip
      - DATA_PATH=/data
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=wallet_db
      - POSTGRES_USER=wallet_user
      - POSTGRES_PASSWORD=wallet_pass
    working_dir: /app
    stdin_open: true
    tty: true
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cdi-network

  tests:
    build: .
    volumes:
      - .:/app
    working_dir: /app
    command: ["python3", "-m", "pytest", "tests/", "-v"]
    networks:
      - cdi-network

  postgres:
    image: postgres:13
    container_name: postgres-container
    hostname: postgres
    environment:
      POSTGRES_USER: wallet_user
      POSTGRES_PASSWORD: wallet_pass
      POSTGRES_DB: wallet_db
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
      - ./data:/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wallet_user -d wallet_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      cdi-network:
        aliases:
          - postgres

  dashboard:
    build:
      context: ./dashboard
    volumes:
      - ./dashboard:/app
    ports:
      - "8501:8501"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=wallet_db
      - POSTGRES_USER=wallet_user
      - POSTGRES_PASSWORD=wallet_pass
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - cdi-network

networks:
  cdi-network:
    driver: bridge

volumes:
  postgres_data: